
name: CI

on:
  push:
    branches: [ main ]
    tags-ignore:
      - '*'
  pull_request:
jobs:
  
  build:
    name: Build and Pushing the Image
    runs-on: ubuntu-latest
    steps:
       - if: github.event_name == 'push'
         uses: actions/checkout@v1
       - if: github.event_name == 'pull_request'
         uses: actions/checkout@v2
         with:
         
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
       - name: set SonarEnv for PR
         if: github.event_name == 'pull_request'
         run: |
          PR_KEY=$(echo ${GITHUB_REF} |awk -F '/' '{print$3}')
          echo ::set-env name=SONAR_CMD::$(echo sonarqube - Dsonar.pullrequest.branch=${GITHUB_HEAD_REF} -Dsonar.pullrequest.key=${PR_KEY} -Dsonar.pullrequest.base=${GITHUB_BASE_REF})
       - name: set SonarEnv for master
         if: github.event_name == 'push'
         run: echo ::set-env name=SONAR_CMD::$(echo sonarqube -Dsonar.branch.name=master)
       - run: git --no-pager show --oneline  
       - name: SonarCloud Scan
         run: ./gradlew ${SONAR_CMD} -Dsonar.login=${SONAR_TOKEN} -Dsonar.github.oauth=${GITHUB_TOKEN}
         env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       - run: echo  "The job was automatically triggered by a ${{ github.event_name }} event."
       - run: echo  "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
       - run: echo  "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
       - run: echo "${{ secrets.PASSWORD }}"
       - name: Print custom environment variables from ubuntu-latest
      #env:
       # STEP_ENVIRONMENT_VARIABLE: 'custom step environment variable for bash'
      #run: |
       # echo "Accessing environment variables in run command"
        #echo "$WORKSPACE_ENVIRONMENT_VARIABLE"
        #echo "$JOB_ENVIRONMENT_VARIABLE"
        #echo "$STEP_ENVIRONMENT_VARIABLE"
  SAST:
 #   needs: unit-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #steps:

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: gitops-argocd

      run: |
        # Build a docker container and push it to ECR
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/}-$git_hash .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/}-$git_hash
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/}-$git_hash"
        
    - name: Update Version
      run: |
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          version=$(cat ./charts/helm-example/values.yaml | grep version: | awk '{print $2}')
          sed -i "s/$version/${GITHUB_REF##*/}-$git_hash/" ./charts/helm-example/values.yaml
          
    - name: Commit and push changes
      uses: devops-infra/action-commit-push@v0.3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        commit_message: Version updated

